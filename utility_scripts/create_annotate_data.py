# Create tfrecords from annotations file generated by text_renderer library
# Creates two files for training and testing

# HOW TO USE:
# Pass two annot filenames to create followed by test data size
# Pass only one filename as cli to generate only one file (without train test split)

# EXAMPLE:
# python create_annotate.py train.txt test.txt 10000

import numpy as np
import sys

BASE_DIR = "/home/abhishar/Desktop/Abhishar_Sinha-IITB-Assignment/"
IMAGES_DIR = "text_renderer/output/default/"
DATA_DIR = "datasets/"

if len(sys.argv) == 2:
	TEST_SIZE = 0
elif len(sys.argv) == 4:
	TEST_SIZE = int(sys.argv[3])

list_img_label = []
with open(IMAGES_DIR+"tmp_labels.txt", "r") as img_file:
	for line in img_file.readlines():
		parts = line.split(" ")
		label = " ".join(parts[1:]).rstrip()
		img_path = BASE_DIR + IMAGES_DIR + parts[0] + ".jpg"
		list_img_label.append((img_path, label))

# randomly shuffling list
np.random.shuffle(list_img_label)
training_samples = list_img_label[TEST_SIZE:]
testing_samples = list_img_label[:TEST_SIZE]


train_filename = sys.argv[1]
with open(BASE_DIR+DATA_DIR+train_filename, "w") as f:
	for t in training_samples:
		print(" ".join(t), file=f)

# 
if not TEST_SIZE == 0:
	test_filename = sys.argv[2]
	with open(BASE_DIR+DATA_DIR+test_filename, "w") as f:
		for t in testing_samples:
			print(" ".join(t), file=f)